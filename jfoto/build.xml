<project name="JFoto" default="build" basedir=".">
	<property file="build.properties"/>
	<!--<property file="/kwaqua/src/test/resources/kwaqua.properties"/>-->

	<property name="app.name" value="jphoto"/>
	<property name="app.version" value="${app.version}"/>

	<property name="properties.home" value="web/WEB-INF/properties"/>

	<property name="web.home" value="${basedir}/web"/>
	<property name="src.home" value="${basedir}/src"/>

	<property name="web-inf" value="${web.home}/WEB-INF"/>
	<property name="deploy.classes" value="${web.home}/WEB-INF/classes"/>

	<property name="jsp.classes" value="${deploy.classes}"/>
	<property name="tests.unit.classes" value="${deploy.classes}"/>

	<property name="tests.unit.src" value="${basedir}/tests/unit"/>
	<property name="tests.unit.reports" value="${tests.unit.src}/_reports"/>

	<property name="tests.kwaqua.src" value="${basedir}/tests/kwaqua"/>
	<property name="tests.kwaqua.reports" value="${tests.kwaqua.src}/_reports"/>

	<property name="tomcat.lib" value="${tomcat.home}/lib"/>
	<property name="web-inf.lib" value="web/WEB-INF/lib"/>
	<property name="tests.lib" value="${basedir}/tests/lib"/>
	<property name="tests.lib.runtime" value="${basedir}/tests/lib-runtime"/>

	<property name="tests.kwaqua.build" value="${basedir}/tests/kwaqua.build"/>

	<!-- Define the CLASSPATH -->
	<path id="compile.classpath">
		<fileset dir="${tomcat.home}/bin">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${tomcat.lib}"/>
		<fileset dir="${tomcat.lib}">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${web-inf.lib}"/>
		<fileset dir="${web-inf.lib}">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${tests.lib}"/>
		<fileset dir="${tests.lib}">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${properties.home}"/>
		<pathelement location="web/WEB-INF/classes"/>
	</path>

	<target name="all" depends="clean,build,build-jsp" description="Clean work dirs, then compile, create a WAR, copy it to webapp dir"/>

	<target name="clean" description="Delete old work and dist directories">
		<delete dir="${deploy.classes}"/>
	</target>

	<target name="prepare" depends="clean" description="Create working dirs and copy static files to work dir">
		<mkdir dir="${deploy.classes}"/>
		<copy todir="${deploy.classes}">
			<fileset dir="${properties.home}">
				<include name="quartz.properties"/>
			</fileset>
		</copy>
		<copy todir="${web.home}">
			<fileset dir="${web.home}"/>
		</copy>
	</target>

	<target name="build" depends="prepare" description="Compile Java sources and copy to WEB-INF/classes dir">
		<javac srcdir="${src.home}" destdir="${deploy.classes}">
			<classpath refid="compile.classpath"/>
		</javac>
		<copy todir="${deploy.classes}">
			<fileset dir="${src.home}" excludes="**/*.java"/>
		</copy>
	</target>


	<target name="build-jsp" depends="build" description="JSPs compilation">
		<echo message="Tomcat Home: ${tomcat.home}"/>
		<taskdef classname="org.apache.jasper.JspC" name="jasper2">
			<classpath refid="compile.classpath"/>
		</taskdef>
		<echo message="Compiling JSPs"/>
		<echo/>
		<mkdir dir="${jsp.classes}"/>

		<!--PRECOMPILATION -->
		<echo message="JSP Translation phase..."/>
		<jasper2 validateXml="false" uriroot="${basedir}/web/" outputDir="${jsp.classes}" compilerSourceVM="1.5" id=""/>

		<!--COMPILATION-->
		<echo message="JSP Compilation phase..."/>
		<echo/>
		<javac debug="false"
			   debuglevel="0"
			   verbose="1"
			   nowarn="on"
			   deprecation="false"
			   destdir="${jsp.classes}"
			   failonerror="yes"
			   includes="**/*.java"
			   excludes="**/migration/**, **/_*.java"
			   memorymaximumsize="512m"
			   fork="Yes"
			   srcdir="${jsp.classes}"
			   listfiles="Yes">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>




	<target name="tests-unit-build" depends="prepare" description="Compile Test sources and copy to WEB-INF/classes dir">
		<javac srcdir="${tests.unit.src}" destdir="${deploy.classes}">
			<classpath refid="compile.classpath"/>
		</javac>
		<copy todir="${deploy.classes}">
			<fileset dir="${tests.unit.src}" excludes="**/*.java"/>
		</copy>
	</target>

	<target name="tests-unit-run" depends="build,tests-unit-build">
		<mkdir dir="${tests.unit.reports}"/>
		<junit dir="${tests.unit.src}" printsummary="yes" haltonfailure="yes">
			<classpath refid="compile.classpath"/>
			<classpath>
				<pathelement location="${deploy.classes}"/>
				<pathelement location="${tests.unit.classes}"/>
				<pathelement location="${tests.lib}/junit.jar"/>
				<pathelement location="${web-inf.lib}"/>
				<pathelement location="${tests.unit.src}/springConfigs"/>
			</classpath>

			<formatter type="plain"/>
			<formatter type="xml"/>

			<batchtest fork="yes" todir="${tests.unit.reports}">
				<fileset dir="${tests.unit.src}">
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

</project>  
